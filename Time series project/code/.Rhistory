# clearing environment
rm(list = ls())
graphics.off()
# Add Libraries in order to use them
library(MASS)
library(ISLR2)
library(data.table)
library("corrplot")
library("ggplot2")
library("GGally")
library(pastecs)
library(psych)
library(dplyr)
library(performance)
library(lmtest)
library(boot)
library(glmnet)
# dataset cleaning
data <- read.csv("1.csv")
# removing outliers
detect_outlier <- function(x) {
Quantile1 <- quantile(x, probs=.25)
Quantile3 <- quantile(x, probs=.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outlier <- function(dataframe) {
columns <- names(dataframe)
for (col in columns) {
dataframe <- dataframe[!detect_outlier(dataframe[[col]]), ]
}
print("Remove outliers")
print(dataframe)
}
for(i in 1:2){
data <- remove_outlier(data)
}
data <- data %>% relocate(CGPA, .after=TOEFL)
set.seed(1)
train = sample(dim(data)[1], dim(data)[1]*0.7, replace = FALSE)
data <- data %>%
mutate_at(vars(Research, LOR, SOP, UniRatings), as.factor)
df <- data[train,]
# Funzione personalizzata per calcolare l'R^2 aggiustato
adjusted_r_squared <- function(model) {
1 - (1 - summary(model)$r.squared) * ((nrow(model$model) - 1) / (nrow(model$model) - length(model$coefficients) - 1))
}
# Esempio di regressione lineare stepwise con criterio R^2 aggiustato
model <- lm(Admit ~ ., data = data)  # modello iniziale con tutte le variabili
# Definizione della funzione di criterio basata sull'R^2 aggiustato
criterion_adjusted_r_squared <- function(model) {
adjusted_r_squared(model)
}
# Esecuzione della regressione stepwise con criterio R^2 aggiustato
step_model <- step(model, direction = "forward", scope = formula(model), criterion = criterion_adjusted_r_squared)
set.seed(1)
lm_fit_all <- lm(Admit ~ . + exp(GRE) + exp(TOEFL) + exp(CGPA) + log10(GRE) + log10(TOEFL) + log10(CGPA) + poly(GRE,3) + poly(TOEFL,3) + poly(CGPA,3) + sqrt(GRE) + sqrt(TOEFL) + sqrt(CGPA), data = data, subset = train)
summary(lm_fit_all)
# clearing environment
rm(list = ls())
graphics.off()
# Add Libraries in order to use them
library(MASS)
library(ISLR2)
library(data.table)
library("corrplot")
library("ggplot2")
library("GGally")
library(pastecs)
library(psych)
library(dplyr)
library(performance)
library(lmtest)
library(boot)
library(glmnet)
# dataset cleaning
data <- read.csv("1.csv")
data <- data.frame(data[,2:9])
colnames(data)[1] = "GRE"
colnames(data)[2] = "TOEFL"
colnames(data)[3] = "UniRatings"
colnames(data)[8] = "Admit"
# removing outliers
detect_outlier <- function(x) {
Quantile1 <- quantile(x, probs=.25)
Quantile3 <- quantile(x, probs=.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outlier <- function(dataframe) {
columns <- names(dataframe)
for (col in columns) {
dataframe <- dataframe[!detect_outlier(dataframe[[col]]), ]
}
print("Remove outliers")
print(dataframe)
}
for(i in 1:2){
data <- remove_outlier(data)
}
data <- data %>% relocate(CGPA, .after=TOEFL)
set.seed(1)
train = sample(dim(data)[1], dim(data)[1]*0.7, replace = FALSE)
data <- data %>%
mutate_at(vars(Research, LOR, SOP, UniRatings), as.factor)
df <- data[train,]
set.seed(1)
train = sample(dim(data)[1], dim(data)[1]*0.7, replace = FALSE)
View(data)
# clearing environment
rm(list = ls())
graphics.off()
# Add Libraries in order to use them
library(MASS)
library(ISLR2)
library(data.table)
library("corrplot")
library("ggplot2")
library("GGally")
library(pastecs)
library(psych)
library(dplyr)
library(performance)
library(lmtest)
library(boot)
library(glmnet)
# dataset cleaning
data <- read.csv("1.csv")
# dataset cleaning
data <- read.csv("1.csv")
# dataset cleaning
data <- read.csv("1.csv")
library(car)    # Test di autocorrelazione
library(lmtest) # Test di eteroschedasticitÃ 
rm(list = ls())  # cleaning the working space
set.seed(1234)
setwd("C:/Users/fsilv/Desktop/agrimonia")
set.seed(1234)
setwd("C:\Users\fsilv\Desktop\S4HDD\Time series project\code")
load("./response_variable.RData")
setwd("C:/Users/fsilv/Desktop/S4HDD/Time series project/code")
load("./response_variable.RData")
load("./covariate_variables.RData")
load("C:/Users/fsilv/Desktop/S4HDD/Time series project/code/Agrimonia_Dataset_v_3_0_0.Rdata")
